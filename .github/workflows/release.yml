name: Deploy build and Publish Package

on:
  push:
    branches:
      - master
    paths:
      - 'src/main/**'
  schedule:
    - cron: 0 */4 * * *
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log Level'
        required: false
        default: 'warning'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # Test Authentication with curl
      - name: Test Authentication with curl
        run: |
          curl -v -u padrewin:${{ secrets.COLDDEV_PACKAGE }} \
          https://maven.pkg.github.com/Cold-Development/ColdDev/dev/padrewin/coldplugin/1.4/coldplugin-1.4.pom

      # Create settings.xml with Personal Access Tokens using cat <<EOF
      - name: Create settings.xml
        run: |
          cat <<EOF > $GITHUB_WORKSPACE/settings.xml
          <settings>
            <servers>
              <server>
                <id>com.github.coldbits</id>
                <username>padrewin</username>
                <password>${{ secrets.COLDBITS_PACKAGE }}</password>
              </server>
              <server>
                <id>com.github.coldplugin</id>
                <username>padrewin</username>
                <password>${{ secrets.COLDDEV_PACKAGE }}</password>
              </server>
            </servers>
          </settings>
          EOF

      # Build the project using Maven (without publishing)
      - name: Build with Maven
        run: mvn package -s $GITHUB_WORKSPACE/settings.xml
        env:
          COLDDEV_PACKAGE: ${{ secrets.COLDDEV_PACKAGE }}
          GITHUB_ACTOR: padrewin

      # Send Discord notification on build success or failure
      - name: Notify Discord of Build Status
        if: always()
        run: |
          STATUS="Success"
          COLOR=3066993  # Green
          if [ "${{ job.status }}" != "success" ]; then
            STATUS="Failure"
            COLOR=15158332  # Red
          fi

          # Gather commit details
          CHANGES=$(git log --pretty=format:"%h - %s by %an" --no-merges --since="${{ github.event.before }}")
          
          # Check if there are any changes
          if [ -z "$CHANGES" ]; then
            CHANGES="No changes"
          fi

          curl -H "Content-Type: application/json" \
          -d '{
                "embeds": [{
                  "title": "'"${{ github.event.repository.name }}"'",
                  "description": "**Build**: '"${{ github.run_number }}"'\n**Status**: '"$STATUS"'\n**Changes**:\n'"$CHANGES"'",
                  "color": '"$COLOR"'
                }]
              }' \
          ${{ secrets.DISCORD_WEBHOOK_URL }}

  publish:
    runs-on: ubuntu-latest
    needs: build
    if: "contains(github.event.commits[0].message, '[build]')"
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # Re-create settings.xml from the GitHub secret for publish
      - name: Create settings.xml for publish
        run: |
          cat <<EOF > $GITHUB_WORKSPACE/settings.xml
          <settings>
            <servers>
              <server>
                <id>com.github.coldbits</id>
                <username>padrewin</username>
                <password>${{ secrets.COLDBITS_PACKAGE }}</password>
              </server>
              <server>
                <id>com.github.coldplugin</id>
                <username>padrewin</username>
                <password>${{ secrets.COLDDEV_PACKAGE }}</password>
              </server>
            </servers>
          </settings>
          EOF

      # Publish the package to GitHub Packages
      - name: Publish to GitHub Packages Apache Maven
        run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Send Discord notification on publish success or failure
      - name: Notify Discord of Publish Status
        if: always()
        run: |
          STATUS="Success"
          COLOR=3066993  # Green
          if [ "${{ job.status }}" != "success" ]; then
            STATUS="Failure"
            COLOR=15158332  # Red
          fi

          # Gather commit details
          CHANGES=$(git log --pretty=format:"%h - %s by %an" --no-merges --since="${{ github.event.before }}")
          
          # Check if there are any changes
          if [ -z "$CHANGES" ]; then
            CHANGES="No changes"
          fi

          curl -H "Content-Type: application/json" \
          -d '{
                "embeds": [{
                  "title": "'"${{ github.event.repository.name }}"'",
                  "description": "**Build**: '"${{ github.run_number }}"'\n**Status**: '"$STATUS"'\n**Changes**:\n'"$CHANGES"'",
                  "color": '"$COLOR"'
                }]
              }' \
          ${{ secrets.DISCORD_WEBHOOK_URL }}
